body {
  background-color: transparent;
  margin: 0;
  padding: 0;
}

#container {
  display: flex;
  flex-direction: column;
  height: 100vh;
}

.export {
  width: 6em;
  height: 2.4em;
  float: right;
  margin-right: 1em;
}

.icon {
  display: flex;
  flex-direction: row;
  text-align: center;
  padding: 0.6em;
}

.icon .codicon {
  margin-right: 0.4em;
}

.message {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.subgraph {
  margin: 0.5em;
  width: 10em;
  height: 10em;
  border-radius: 1em;
  border: #666 solid 0.2em;
  display: block;
}

/* HTML: <div class="loader"></div> */
.loading {
  --s: 25px;
  --g: 5px;

  width: calc(3 * (1.353 * var(--s) + var(--g)));
  display: grid;
  justify-items: end;
  aspect-ratio: 3;
  overflow: hidden;
  --_m: linear-gradient(90deg, #0000, #000 15px calc(100% - 15px), #0000);
  -webkit-mask: var(--_m);
  mask: var(--_m);
}
.loading:before {
  content: '';
  width: 200%;
  background: linear-gradient(90deg, #25da3dbd 50%, #0000 0),
    conic-gradient(
      from -90deg at var(--s) calc(0.353 * var(--s)),
      #fff 135deg,
      #666 0 270deg,
      #aaa 0
    );
  background-blend-mode: multiply;
  --_m: linear-gradient(
      to bottom right,
      #0000 calc(0.25 * var(--s)),
      #000 0 calc(100% - calc(0.25 * var(--s)) - 1.414 * var(--g)),
      #0000 0
    ),
    conic-gradient(from -90deg at right var(--g) bottom var(--g), #000 90deg, #0000 0);
  -webkit-mask: var(--_m);
  mask: var(--_m);
  background-size:
    calc(100% / 3) 100%,
    calc(100% / 6) 100%;
  -webkit-mask-size: calc(100% / 6) 100%;
  mask-size: calc(100% / 6) 100%;
  -webkit-mask-composite: source-in;
  mask-composite: intersect;
  animation: l10 1s infinite linear;
}
@keyframes l10 {
  to {
    transform: translate(calc(100% / 3));
  }
}

.datatable-array SUMMARY {
  width: max-content;
}

.datatable-array DIV {
  padding-left: 13px;
}

tr:nth-child(even) {
  background-color: var(--vscode-list-hoverBackground);
}

/* The little triangles that indicate sorting direction in the header are made using css border hacks.
 * here we override their colors with theme variables so they have sufficient contrast and respect user theme.
*/
.datatable-sorter::before {
  border-top: 4px solid var(--vscode-inputOption-activeForeground) !important;
}

.datatable-sorter::after {
  border-bottom: 4px solid var(--vscode-inputOption-activeForeground) !important;
}

.datatable-ascending .datatable-sorter::after,
.datatable-descending .datatable-sorter::before,
.datatable-ascending .datatable-filter::after,
.datatable-descending .datatable-filter::before {
  opacity: 0.8 !important;
}

/* simple-datatables overrides some button styles. Here we just copied the base vscode styles and added
* !important to make sure they override the package's colors.
*/
button:focus {
  outline-color: var(--vscode-focusBorder) !important;
}
button {
  border: none !important;
  padding: var(--input-padding-vertical) var(--input-padding-horizontal) !important;
  color: var(--vscode-button-foreground) !important;
}

.datatable-pagination .datatable-active a,
.datatable-pagination .datatable-active a:focus,
.datatable-pagination .datatable-active a:hover,
.datatable-pagination .datatable-active button,
.datatable-pagination .datatable-active button:focus,
.datatable-pagination .datatable-active button:hover {
  background-color: var(--vscode-button-background) !important;
}
