parser grammar FunctionsParser;

function_names: POW
	|DATE
	|ARRAY_AGG
	|AVG
	|BIT_AND
	|BIT_OR
	|BIT_XOR
	|BOOL_AND
	|BOOL_OR
	|COUNT
	|EVERY
	|JSON_AGG
	|JSON_OBJECT_AGG
	|MAX
	|MIN
	|RANGE_AGG
	|RANGE_INTERSECT_AGG
	|STRING_AGG
	|SUM
	|XMLAGG
	|ARRAY_APPEND
	|ARRAY_CAT
	|ARRAY_DIMS
	|ARRAY_FILL
	|ARRAY_LENGTH
	|ARRAY_LOWER
	|ARRAY_NDIMS
	|ARRAY_POSITION
	|ARRAY_PREPEND
	|ARRAY_REMOVE
	|ARRAY_REPLACE
	|ARRAY_TO_STRING
	|ARRAY_UPPER
	|CARDINALITY
	|TRIM_ARRAY
	|UNNEST
	|CONVERT
	|CONVERT_FROM
	|CONVERT_TO
	|ENCODE
	|DECODE
	|BIT_COUNT
	|BTRIM
	|GET_BIT
	|GET_BYTE
	|LENGTH
	|LTRIM
	|MD5
	|RTRIM
	|SET_BIT
	|SET_BYTE
	|SHA224
	|SHA256
	|SHA384
	|SHA512
	|SUBSTR
	|NUM_NONNULLS
	|NUM_NULLS
	|COALESCE
	|NULLIF
	|GREATEST
	|LEAST
	|AGE
	|CLOCK_TIMESTAMP
	|CURRENT_DATE
	|CURRENT_TIME
	|CURRENT_TIMESTAMP
	|DATE_BIN
	|DATE_PART
	|DATE_TRUNC
	|EXTRACT
	|ISFINITE
	|JUSTIFY_DAYS
	|JUSTIFY_HOURS
	|JUSTIFY_INTERVAL
	|LOCALTIME
	|LOCALTIMESTAMP
	|MAKE_DATE
	|MAKE_INTERVAL
	|MAKE_TIME
	|MAKE_TIMESTAMP
	|MAKE_TIMESTAMPTZ
	|NOW
	|STATEMENT_TIMESTAMP
	|TIMEOFDAY
	|TRANSACTION_TIMESTAMP
	|ENUM_FIRST
	|ENUM_LAST
	|ENUM_RANGE
	|TO_CHAR
	|TO_DATE
	|TO_NUMBER
	|TO_TIMESTAMP
	|BOX
	|CIRCLE
	|LINE
	|LSEG
	|PATH
	|POINT
	|POLYGON
	|AREA
	|CENTER
	|DIAGONAL
	|DIAMETER
	|HEIGHT
	|ISCLOSED
	|ISOPEN
	|NPOINTS
	|PCLOSE
	|POPEN
	|RADIUS
	|SLOPE
	|WIDTH
	|GROUPING
	|SINH
	|COSH
	|TANH
	|ASINH
	|ACOSH
	|ATANH
	|ABBREV
	|BROADCAST
	|FAMILY
	|HOST
	|HOSTMASK
	|INET_MERGE
	|INET_SAME_FAMILY
	|MASKLEN
	|NETMASK
	|NETWORK
	|SET_MASKLEN
	|TEXT
	|TRUNC
	|MACADDR8_SET7BIT
	|JSON_ARRAY_ELEMENTS
	|JSONB_ARRAY_ELEMENTS
	|JSON_ARRAY_ELEMENTS_TEXT
	|JSONB_ARRAY_ELEMENTS_TEXT
	|JSON_ARRAY_LENGTH
	|JSONB_ARRAY_LENGTH
	|JSON_EACH
	|JSONB_EACH
	|JSON_EACH_TEXT
	|JSONB_EACH_TEXT
	|JSON_EXTRACT_PATH
	|JSONB_EXTRACT_PATH
	|JSON_EXTRACT_PATH_TEXT
	|JSONB_EXTRACT_PATH_TEXT
	|JSON_OBJECT_KEYS
	|JSONB_OBJECT_KEYS
	|JSON_POPULATE_RECORD
	|JSONB_POPULATE_RECORD
	|JSON_POPULATE_RECORDSET
	|JSONB_POPULATE_RECORDSET
	|JSON_TO_RECORD
	|JSONB_TO_RECORD
	|JSON_TO_RECORDSET
	|JSONB_TO_RECORDSET
	|JSON_STRIP_NULLS
	|JSONB_STRIP_NULLS
	|JSONB_SET
	|JSONB_SET_LAX
	|JSONB_INSERT
	|JSONB_PATH_EXISTS
	|JSONB_PATH_MATCH
	|JSONB_PATH_QUERY
	|JSONB_PATH_QUERY_ARRAY
	|JSONB_PATH_QUERY_FIRST
	|JSONB_PATH_EXISTS_TZ
	|JSONB_PATH_MATCH_TZ
	|JSONB_PATH_QUERY_TZ
	|JSONB_PATH_QUERY_ARRAY_TZ
	|JSONB_PATH_QUERY_FIRST_TZ
	|JSONB_PRETTY
	|JSON_TYPEOF
	|JSONB_TYPEOF
	|TO_JSON
	|TO_JSONB
	|ARRAY_TO_JSON
	|ROW_TO_JSON
	|JSON_BUILD_ARRAY
	|JSONB_BUILD_ARRAY
	|JSON_BUILD_OBJECT
	|JSON_OBJECT
	|JSONB_OBJECT
	|ABS
	|CBRT
	|CEIL
	|DEGREES
	|DIV
	|EXP
	|FACTORIAL
	|FLOOR
	|GCD
	|LCM
	|LN
	|LOG
	|LOG10
	|MIN_SCALE
	|MOD
	|PI
	|POWER
	|RADIANS
	|ROUND
	|SCALE
	|SIGN
	|SQRT
	|TRIM_SCALE
	|WIDTH_BUCKET
	|MODE
	|PERCENTILE_CONT
	|PERCENTILE_DISC
	|RANDOM
	|SETSEED
	|LOWER
	|UPPER
	|ISEMPTY
	|LOWER_INC
	|UPPER_INC
	|LOWER_INF
	|UPPER_INF
	|RANGE_MERGE
	|MULTIRANGE
	|TS_DEBUG
	|TS_LEXIZE
	|TS_PARSE
	|TS_TOKEN_TYPE
	|ARRAY_TO_TSVECTOR
	|GET_CURRENT_TS_CONFIG
	|NUMNODE
	|PLAINTO_TSQUERY
	|PHRASETO_TSQUERY
	|WEBSEARCH_TO_TSQUERY
	|QUERYTREE
	|SETWEIGHT
	|STRIP
	|TO_TSQUERY
	|TO_TSVECTOR
	|JSON_TO_TSVECTOR
	|TS_DELETE
	|TS_FILTER
	|TS_HEADLINE
	|TS_RANK
	|TS_RANK_CD
	|TS_REWRITE
	|TSQUERY_PHRASE
	|TSVECTOR_TO_ARRAY
	|GENERATE_SERIES
	|GENERATE_SUBSCRIPTS
	|CORR
	|COVAR_POP
	|COVAR_SAMP
	|REGR_AVGX
	|REGR_AVGY
	|REGR_COUNT
	|REGR_INTERCEPT
	|REGR_R2
	|REGR_SLOPE
	|REGR_SXX
	|REGR_SXY
	|REGR_SYY
	|STDDEV
	|STDDEV_POP
	|STDDEV_SAMP
	|VARIANCE
	|VAR_POP
	|VAR_SAMP
	|ASCII
	|CHR
	|CONCAT
	|CONCAT_WS
	|FORMAT
	|INITCAP
	|LEFT
	|LPAD
	|PARSE_IDENT
	|QUOTE_IDENT
	|QUOTE_LITERAL
	|QUOTE_NULLABLE
	|REGEXP_MATCH
	|REGEXP_MATCHES
	|REGEXP_REPLACE
	|REGEXP_SPLIT_TO_ARRAY
	|REGEXP_SPLIT_TO_TABLE
	|REPEAT
	|REPLACE
	|REVERSE
	|RIGHT
	|RPAD
	|SPLIT_PART
	|STRPOS
	|STARTS_WITH
	|STRING_TO_ARRAY
	|STRING_TO_TABLE
	|TO_ASCII
	|TO_HEX
	|TRANSLATE
	|UNISTR
	|BIT_LENGTH
	|CHAR_LENGTH
	|CHARACTER_LENGTH
	|NORMALIZE
	|OCTET_LENGTH
	|OVERLAY
	|POSITION
	|SUBSTRING
	|TRIM
	|ACOS
	|ACOSD
	|ASIN
	|ASIND
	|ATAN
	|ATAND
	|ATAN2
	|ATAN2D
	|COS
	|COSD
	|COT
	|COTD
	|SIN
	|SIND
	|TAN
	|TAND
	|GEN_RANDOM_UUID
	|ROW_NUMBER
	|RANK
	|DENSE_RANK
	|PERCENT_RANK
	|CUME_DIST
	|NTILE
	|LAG
	|LEAD
	|FIRST_VALUE
	|LAST_VALUE
	|NTH_VALUE
	|XMLCOMMENT;

function_custom: XMLCONCAT LEFT_PAREN vex (COMMA vex)* RIGHT_PAREN
	|XMLELEMENT LEFT_PAREN NAME name=identifier
(COMMA XMLATTRIBUTES LEFT_PAREN vex (AS attname=identifier)? (COMMA vex (AS attname=identifier)?)* RIGHT_PAREN)?
(COMMA vex)* RIGHT_PAREN
	|XMLFOREST LEFT_PAREN vex (AS name=identifier)? (COMMA vex (AS name=identifier)?)* RIGHT_PAREN
	|XMLPI LEFT_PAREN NAME name=identifier (COMMA vex)? RIGHT_PAREN
	|XMLROOT LEFT_PAREN vex COMMA VERSION (vex | NO VALUE) (COMMA STANDALONE (YES | NO | NO VALUE))? RIGHT_PAREN
	|XMLAGG LEFT_PAREN NAME name=identifier
(COMMA XMLATTRIBUTES LEFT_PAREN vex (AS attname=identifier)? (COMMA vex (AS attname=identifier)?)* RIGHT_PAREN)?
(COMMA vex)* RIGHT_PAREN
	|XMLEXISTS LEFT_PAREN vex PASSING (BY REF)? vex (BY REF)? RIGHT_PAREN
	|XML_IS_WELL_FORMED LEFT_PAREN vex RIGHT_PAREN
	|XML_IS_WELL_FORMED_CONTENT LEFT_PAREN vex RIGHT_PAREN
	|XML_IS_WELL_FORMED_DOCUMENT LEFT_PAREN vex RIGHT_PAREN
	|XPATH LEFT_PAREN
vex COMMA vex (ARRAY LEFT_BRACKET ARRAY LEFT_BRACKET (vex COMMA vex)? RIGHT_BRACKET RIGHT_BRACKET)?
RIGHT_PAREN
	|XPATH_EXISTS LEFT_PAREN
vex COMMA vex (ARRAY LEFT_BRACKET ARRAY LEFT_BRACKET (vex COMMA vex)? RIGHT_BRACKET RIGHT_BRACKET)?
RIGHT_PAREN
	|XMLTABLE LEFT_PAREN
(XMLNAMESPACES LEFT_PAREN vex AS name=identifier (COMMA vex AS name=identifier)* RIGHT_PAREN COMMA)?
vex PASSING (BY REF)? vex (BY REF)?
COLUMNS name=identifier (data_type (PATH vex)? (DEFAULT vex)? (NOT? NULL)? | FOR ORDINALITY) 
(COMMA name=identifier (data_type (PATH vex)? (DEFAULT vex)? (NOT? NULL)? | FOR ORDINALITY))*
RIGHT_PAREN
	|TABLE_TO_XML LEFT_PAREN identifier COMMA boolean_value COMMA boolean_value COMMA vex RIGHT_PAREN;

